$install = <<-SCRIPT
sudo curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py --no-wheel
sudo pip install -r /vagrant/requirements.txt
sudo apt install git
sudo apt-add-repository --yes --update ppa:ansible/ansible
sudo apt install ansible -y
rm -dfr a4
git init
git remote add
git clone --single-branch --branch ansible-4 https://github.com/Otus-DevOps-2019-11/alex-k812_infra.git a4
chown vagrant:vagrant -R a4
SCRIPT

$ansible = <<-SCRIPT
cd a4/ansible
ansible-galaxy install -r environments/stage/requirements.yml
ansible-playbook playbooks/site.yml
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/xenial64"
  config.vm.boot_timeout = 30
  config.vm.provision "shell", inline: "cat /vagrant/ssh/ak.pub >> /home/vagrant/.ssh/authorized_keys"
  config.ssh.insert_key = false
  config.ssh.private_key_path = ['~/.vagrant.d/insecure_private_key', 'C:\Users\AK\a4\ansible\ssh\ak']
  config.vm.provision "shell",
    inline: "sudo apt-get update"
  config.vm.provider :virtualbox do |v|
    v.memory = 512
  end

  config.vm.define "db" do |db|
    db.vm.hostname = "dbserver"
    db.vm.network :private_network, ip: "192.168.10.3"
  end

  config.vm.define "app" do |app|
    app.vm.hostname = "appserver"
    app.vm.network :private_network, ip: "192.168.10.2"
  end

  config.vm.define "controller" do |controller|
    controller.ssh.username = "vagrant"
    controller.vm.network :private_network, ip: "192.168.10.254"
    controller.vm.hostname = "controller"
    controller.vm.provision "shell", inline: $install
    controller.vm.provision "file", source: "vault.key", destination: "~/a4/ansible/vault.key"
    controller.vm.provision "file", source: "C:\\Users\\AK\\a4\\ansible\\ssh\\ak", destination: "/tmp/id_rsa"
    controller.vm.provision "shell", inline: "mv /tmp/id_rsa ~/.ssh/"
    controller.vm.provision "shell", inline: "chmod 400 ~/.ssh/id_rsa"
    controller.vm.provision "shell", inline: $ansible
#    controller.vm.provision :ansible do |ansible|
#      ansible.playbook = "~/a4/ansible/playbooks/site.yml"
#      ansible.verbose = true
#      ansible.install = true
#      ansible.limit = "all"
#      ansible.groups = {
#        "db" => ["dbserver"],
#        "db:vars" => {"mongo_bind_ip" => "0.0.0.0"},
#        "app" => ["appserver"],
#        "app:vars" => { "db_host" => "192.168.10.3"}
#      }
#      ansible.extra_vars = {
#        "deploy_user" => "ubuntu"
#      }
#      ansible.inventory_path = "inventory"
#    end
  end
end
